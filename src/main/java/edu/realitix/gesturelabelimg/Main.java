/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.realitix.gesturelabelimg;

import java.awt.event.KeyEvent;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;

/**
 *
 * @author darshanakg
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    private final String FILE_EXT = ".png";
    
    private List<String> imagesList;
    private String folderPath;
    private int counter;
    private int startIndex;
    private int endIndex;
    public Main() {
        initComponents();
        previousBtn.setEnabled(false);
        nextBtn.setEnabled(false);
    }
    
    private void setImage() {
        String selectedFile = imagesList.get(counter);
        fileNameText.setText(selectedFile);
        imgLabel.setIcon(new ImageIcon(folderPath + "/" + selectedFile + FILE_EXT));
        if (markBtn.isSelected()) {
            counterText.setText(Integer.toString(counter - startIndex));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        mainPanel = new javax.swing.JPanel();
        fileNameText = new javax.swing.JLabel();
        pointingBtn = new javax.swing.JRadioButton();
        zoomOutBtn = new javax.swing.JRadioButton();
        zoomInBtn = new javax.swing.JRadioButton();
        captureBtn = new javax.swing.JRadioButton();
        roamingBtn = new javax.swing.JRadioButton();
        markBtn = new javax.swing.JToggleButton();
        openFolderBtn = new javax.swing.JButton();
        counterText = new javax.swing.JLabel();
        imgLabel = new javax.swing.JLabel();
        previousBtn = new javax.swing.JButton();
        nextBtn = new javax.swing.JButton();
        fPreviousBtn = new javax.swing.JButton();
        fNextBtn = new javax.swing.JButton();
        tPreviousBtn = new javax.swing.JButton();
        tNextBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainPanel.setBackground(new java.awt.Color(255, 255, 255));

        fileNameText.setText("File Name");

        buttonGroup1.add(pointingBtn);
        pointingBtn.setSelected(true);
        pointingBtn.setText("Ponting");

        buttonGroup1.add(zoomOutBtn);
        zoomOutBtn.setText("ZoomOut");

        buttonGroup1.add(zoomInBtn);
        zoomInBtn.setText("ZoomIn");
        zoomInBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zoomInBtnActionPerformed(evt);
            }
        });

        buttonGroup1.add(captureBtn);
        captureBtn.setText("Capture");
        captureBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                captureBtnActionPerformed(evt);
            }
        });

        buttonGroup1.add(roamingBtn);
        roamingBtn.setText("Roaming");

        markBtn.setText("Mark");
        markBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                markBtnActionPerformed(evt);
            }
        });

        openFolderBtn.setText("Open Folder");
        openFolderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFolderBtnActionPerformed(evt);
            }
        });

        counterText.setFont(new java.awt.Font("Ubuntu", 0, 36)); // NOI18N
        counterText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        counterText.setText("0");

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(markBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(captureBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(zoomOutBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fileNameText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pointingBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(openFolderBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                    .addComponent(zoomInBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(roamingBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(counterText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(openFolderBtn)
                .addGap(27, 27, 27)
                .addComponent(fileNameText)
                .addGap(38, 38, 38)
                .addComponent(pointingBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(zoomInBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(zoomOutBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(captureBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(roamingBtn)
                .addGap(18, 18, 18)
                .addComponent(markBtn)
                .addGap(18, 18, 18)
                .addComponent(counterText)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        imgLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        previousBtn.setText("Previous");
        previousBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousBtnActionPerformed(evt);
            }
        });
        previousBtn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                previousBtnKeyPressed(evt);
            }
        });

        nextBtn.setText("Next");
        nextBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextBtnActionPerformed(evt);
            }
        });
        nextBtn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nextBtnKeyPressed(evt);
            }
        });

        fPreviousBtn.setText("50-");
        fPreviousBtn.setPreferredSize(new java.awt.Dimension(37, 29));
        fPreviousBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fPreviousBtnActionPerformed(evt);
            }
        });

        fNextBtn.setText("50+");
        fNextBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fNextBtnActionPerformed(evt);
            }
        });

        tPreviousBtn.setText("10-");
        tPreviousBtn.setPreferredSize(new java.awt.Dimension(37, 29));
        tPreviousBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tPreviousBtnActionPerformed(evt);
            }
        });

        tNextBtn.setText("10+");
        tNextBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tNextBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(previousBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fPreviousBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tPreviousBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tNextBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(fNextBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nextBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(imgLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 745, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(imgLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 542, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nextBtn)
                    .addComponent(previousBtn)
                    .addComponent(fPreviousBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fNextBtn)
                    .addComponent(tPreviousBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tNextBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void zoomInBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zoomInBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_zoomInBtnActionPerformed

    private void markBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_markBtnActionPerformed
        if (!markBtn.isSelected()){
            endIndex = counter;
            saveGesture();
        } else {
            startIndex = counter;
            counterText.setText(Integer.toString(counter - startIndex));
        }
    }//GEN-LAST:event_markBtnActionPerformed

    private void captureBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_captureBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_captureBtnActionPerformed

    private void openFolderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFolderBtnActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        fileChooser.setCurrentDirectory(new File("/home/darshanakg/Projects/GestureDataset/"));
        int res = fileChooser.showDialog(this, "Open");
        if(res == JFileChooser.APPROVE_OPTION){
            File selectedFile = fileChooser.getSelectedFile();
            File[] imageFileList = selectedFile.listFiles();
            imagesList = Arrays.asList(imageFileList).stream().map((file) -> {
                return file.getName().substring(0, file.getName().length() - 4);
            }).sorted().collect(Collectors.toList());
            folderPath = selectedFile.getAbsolutePath();
            counter = 0;
            nextBtn.setEnabled(true);
            setImage();
            nextBtn.requestFocus();
        }
    }//GEN-LAST:event_openFolderBtnActionPerformed

    private void nextBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextBtnActionPerformed
        counter++;
        setImage();
        if (counter + 1 == imagesList.size()) {
            nextBtn.setEnabled(false);
        }
        if (!previousBtn.isEnabled()) {
            previousBtn.setEnabled(true);
        }
    }//GEN-LAST:event_nextBtnActionPerformed

    private void previousBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousBtnActionPerformed
        counter--;
        setImage();
        if (counter == 0) {
            previousBtn.setEnabled(false);
        }
        if (!nextBtn.isEnabled()) {
            nextBtn.setEnabled(true);
        }
    }//GEN-LAST:event_previousBtnActionPerformed

    private void nextBtnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nextBtnKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT && nextBtn.isEnabled()) {
            nextBtn.doClick();
        } else if (evt.getKeyCode() == KeyEvent.VK_LEFT && previousBtn.isEnabled()) {
            previousBtn.doClick();
            previousBtn.requestFocus();
        }
    }//GEN-LAST:event_nextBtnKeyPressed

    private void previousBtnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_previousBtnKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_LEFT && previousBtn.isEnabled()) {
            previousBtn.doClick();
        } else if (evt.getKeyCode() == KeyEvent.VK_RIGHT && nextBtn.isEnabled()) {
            nextBtn.doClick();
            nextBtn.requestFocus();
        }
    }//GEN-LAST:event_previousBtnKeyPressed

    private void fPreviousBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fPreviousBtnActionPerformed
        counter -= 50;
        if (counter <= 0) {
            previousBtn.setEnabled(false);
            counter = 0;
        }
        setImage();
        if (!nextBtn.isEnabled()) {
            nextBtn.setEnabled(true);
        }
    }//GEN-LAST:event_fPreviousBtnActionPerformed

    private void fNextBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fNextBtnActionPerformed
        counter += 50;
        if (counter >= imagesList.size() - 1) {
            nextBtn.setEnabled(false);
            counter = imagesList.size() - 1;
        }
        setImage();
        if (!previousBtn.isEnabled()) {
            previousBtn.setEnabled(true);
        }
    }//GEN-LAST:event_fNextBtnActionPerformed

    private void tPreviousBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tPreviousBtnActionPerformed
        counter -= 10;
        if (counter <= 0) {
            previousBtn.setEnabled(false);
            counter = 0;
        }
        setImage();
        if (!nextBtn.isEnabled()) {
            nextBtn.setEnabled(true);
        }
    }//GEN-LAST:event_tPreviousBtnActionPerformed

    private void tNextBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tNextBtnActionPerformed
        counter += 10;
        if (counter >= imagesList.size() - 1) {
            nextBtn.setEnabled(false);
            counter = imagesList.size() - 1;
        }
        setImage();
        if (!previousBtn.isEnabled()) {
            previousBtn.setEnabled(true);
        }
    }//GEN-LAST:event_tNextBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton captureBtn;
    private javax.swing.JLabel counterText;
    private javax.swing.JButton fNextBtn;
    private javax.swing.JButton fPreviousBtn;
    private javax.swing.JLabel fileNameText;
    private javax.swing.JLabel imgLabel;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JToggleButton markBtn;
    private javax.swing.JButton nextBtn;
    private javax.swing.JButton openFolderBtn;
    private javax.swing.JRadioButton pointingBtn;
    private javax.swing.JButton previousBtn;
    private javax.swing.JRadioButton roamingBtn;
    private javax.swing.JButton tNextBtn;
    private javax.swing.JButton tPreviousBtn;
    private javax.swing.JRadioButton zoomInBtn;
    private javax.swing.JRadioButton zoomOutBtn;
    // End of variables declaration//GEN-END:variables

    private void saveGesture() {
        List<String> imagesToSave = imagesList.subList(startIndex, endIndex);
        System.out.println(imagesToSave.size());
        String fileName = "";
        if (pointingBtn.isSelected()) {
            fileName = "pointing-";
        } else if (zoomInBtn.isSelected()) {
            fileName = "zoomin-";
        } else if (zoomOutBtn.isSelected()) {
            fileName = "zoomout-";
        } else if (captureBtn.isSelected()) {
            fileName = "capture-";
        } else {
            fileName = "roaming-";
        }
        fileName += Long.toString(System.currentTimeMillis());
        fileName += ".txt";
        fileName = "/home/darshanakg/Projects/GestureDataset/formatted/" + fileName;
        
        try (BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(fileName))) {
            for (String image : imagesToSave) {
                bufferedWriter.write(image);
                bufferedWriter.newLine();
            }
            bufferedWriter.flush();
            bufferedWriter.close();
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        System.out.printf("[File Saved] %s\n", fileName);
    }
}
